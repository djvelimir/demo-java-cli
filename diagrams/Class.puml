@startuml
'https://plantuml.com/class-diagram

interface App {
    + start(args: String[])
}

class AppImpl {
    - argumentProcessor: ArgumentProcessor
    + {static} main(args: String[])
}

interface ArgumentValidator {
    + validate(args: String[]): boolean
}

class ArgumentValidatorImpl {
}

interface ArgumentProcessor {
    + process(args: String[])
}

class ArgumentProcessorImpl {
    - argumentValidator: ArgumentValidator
    - passwordGenerator: PasswordGenerator
    - terminal: Terminal
}

interface Terminal {
    + show(message: String)
}

class TerminalImpl {
}

interface PasswordGenerator {
    + generate(): String
}

class PasswordGeneratorImpl {
    - PASSWORD_LENGTH: int
}

interface RandomCharacterGenerator {
    + generateUppercaseCharacter(): char
    + generateLowercaseCharacter(): char
    + generateDigitCharacter(): char
    + generateSpecialCharacter(): char
    + generateAllowedCharacter(): char
}

class RandomCharacterGeneratorImpl {
    - UPPERCASE_CHARACTERS: String
    - LOWERCASE_CHARACTERS: String
    - DIGIT_CHARACTERS: String
    - SPECIAL_CHARACTERS: String
    - UNION_OF_ALLOWED_CHARACTERS: String
    - RANDOM_OBJECT: Random
}

interface StringShuffler {
    + shuffle(characters: String): String
}

class StringShufflerImpl {
}

ArgumentValidator <|-- ArgumentValidatorImpl
ArgumentProcessor <|-- ArgumentProcessorImpl
Terminal <|-- TerminalImpl
PasswordGenerator <|-- PasswordGeneratorImpl
RandomCharacterGenerator <|-- RandomCharacterGeneratorImpl
StringShuffler <|-- StringShufflerImpl
App <|-- AppImpl

AppImpl *--l ArgumentProcessor

ArgumentProcessorImpl *--l ArgumentValidator
ArgumentProcessorImpl *--d PasswordGenerator
ArgumentProcessorImpl *--r Terminal

PasswordGeneratorImpl *--l RandomCharacterGenerator
PasswordGeneratorImpl *--r StringShuffler
@enduml